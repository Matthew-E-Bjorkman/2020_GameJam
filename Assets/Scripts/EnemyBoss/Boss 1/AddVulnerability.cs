using System.Collections;
using UnityEngine;

namespace EnemyBoss
{
    public class AddVulnerability : AttackPhase<BossPhase1>
    {
        private static AddVulnerability _instance;
        private float stateTimer = 0;
        private GameObject[] weakpoints;


        private AddVulnerability()
        {
            if (_instance != null)
                return;

            _instance = this;
        }

        public static AddVulnerability Instance
        {
            get
            {
                if (_instance == null)
                    new AddVulnerability();

                return _instance;
            }
        }
            
        public override void EnterState(BossPhase1 _owner)
        {
            stateTimer = 0f;
            weakpoints = _owner.GetWeakpoints();
            //Introduce Vulnerability
            //int nextVuln = UnityEngine.Random.Range(0, 2);
            //GameObject vuln = GameObject.Instantiate(weakpoints[nextVuln], _owner.transform);
            //GameObject.Destroy(vuln, 10f);
        }

        public override void ExitState(BossPhase1 _owner)
        {

        }

        public override void UpdateState(BossPhase1 _owner)
        {
            stateTimer += Time.deltaTime;
            if (stateTimer > 1f)
            {
                _owner.ChangeState();
            }
        }
    }
}